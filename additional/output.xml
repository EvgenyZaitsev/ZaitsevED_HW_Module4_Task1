<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.11.3 on win32)" generated="20230516 16:51:39.127" rpa="false" schemaversion="2">
<suite id="s1" name="DatabaseTest" source="C:\Users\Evgeny_Zaitsev\Documents\Data Quality Mentoring\ZaitsevED_HW_Module4_Task1\tests\DatabaseTest.robot">
<kw name="connect to db" library="DatabaseKeywords" type="SETUP">
<arg>${DriverName}</arg>
<arg>${DbServer}</arg>
<arg>${DbName}</arg>
<arg>${Encrypt}</arg>
<arg>${DbUser}</arg>
<arg>${DbPassword}</arg>
<kw name="create connection string" library="DatabaseKeywords">
<var>${connection_string}</var>
<arg>${DriverName}</arg>
<arg>${DbServer}</arg>
<arg>${DbName}</arg>
<arg>${Encrypt}</arg>
<arg>${DbUser}</arg>
<arg>${DbPassword}</arg>
<kw name="Format String" library="String">
<var>${connection_string}</var>
<arg>${ConnectionString}</arg>
<arg>${DriverName}</arg>
<arg>${DbServer}</arg>
<arg>${DbName}</arg>
<arg>${Encrypt}</arg>
<arg>${DbUser}</arg>
<arg>${DbPassword}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20230516 16:51:39.164" level="INFO">${connection_string} = 'DRIVER={ODBC Driver 18 for SQL Server};SERVER=localhost\SQLEXPRESS;DATABASE=TRN;ENCRYPT=no;UID=TestLogin;PWD=12345'</msg>
<status status="PASS" starttime="20230516 16:51:39.164" endtime="20230516 16:51:39.164"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Creating connection string ${connection_string}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.165" level="INFO">Creating connection string 'DRIVER={ODBC Driver 18 for SQL Server};SERVER=localhost\SQLEXPRESS;DATABASE=TRN;ENCRYPT=no;UID=TestLogin;PWD=12345'</msg>
<status status="PASS" starttime="20230516 16:51:39.165" endtime="20230516 16:51:39.165"/>
</kw>
<msg timestamp="20230516 16:51:39.165" level="INFO">${connection_string} = 'DRIVER={ODBC Driver 18 for SQL Server};SERVER=localhost\SQLEXPRESS;DATABASE=TRN;ENCRYPT=no;UID=TestLogin;PWD=12345'</msg>
<status status="PASS" starttime="20230516 16:51:39.164" endtime="20230516 16:51:39.165"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Connecting to database with connection string ${connection_string}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.165" level="INFO">Connecting to database with connection string 'DRIVER={ODBC Driver 18 for SQL Server};SERVER=localhost\SQLEXPRESS;DATABASE=TRN;ENCRYPT=no;UID=TestLogin;PWD=12345'</msg>
<status status="PASS" starttime="20230516 16:51:39.165" endtime="20230516 16:51:39.165"/>
</kw>
<kw name="Connect To Database Using Custom Params" library="DatabaseLibrary">
<arg>pyodbc</arg>
<arg>${connection_string}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using the map string `db_custom_param_string`.</doc>
<msg timestamp="20230516 16:51:39.168" level="INFO">Executing : Connect To Database Using Custom Params : pyodbc.connect(db_api_2.connect('DRIVER={ODBC Driver 18 for SQL Server};SERVER=localhost\SQLEXPRESS;DATABASE=TRN;ENCRYPT=no;UID=TestLogin;PWD=12345')) </msg>
<status status="PASS" starttime="20230516 16:51:39.165" endtime="20230516 16:51:39.208"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.163" endtime="20230516 16:51:39.208"/>
</kw>
<test id="s1-t1" name="Check employees count">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${EmployeesCountScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.208" level="INFO">Executing : Query  |  SELECT COUNT(*) AS TotalCount FROM hr.employees </msg>
<msg timestamp="20230516 16:51:39.210" level="INFO">${output} = [(40,)]</msg>
<status status="PASS" starttime="20230516 16:51:39.208" endtime="20230516 16:51:39.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.210" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.210" endtime="20230516 16:51:39.210"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.211" level="INFO">[(40,)]</msg>
<status status="PASS" starttime="20230516 16:51:39.211" endtime="20230516 16:51:39.211"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${EmployeesCountExpectedValue}</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.211" endtime="20230516 16:51:39.211"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.208" endtime="20230516 16:51:39.212"/>
</test>
<test id="s1-t2" name="Check first employee">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${EmployeesOldestOneScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.214" level="INFO">Executing : Query  |  SELECT TOP(1) employee_id as ID, first_name as FirstName, last_name as LastName, hire_date as HireDate, salary as Salary FROM hr.employees WHERE hire_date = (SELECT MIN(hire_date) FROM hr.employees) </msg>
<msg timestamp="20230516 16:51:39.216" level="INFO">${output} = [(100, 'Steven', 'King', datetime.date(1987, 6, 17), Decimal('24000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.214" endtime="20230516 16:51:39.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.217" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.217" endtime="20230516 16:51:39.217"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.217" level="INFO">[(100, 'Steven', 'King', datetime.date(1987, 6, 17), Decimal('24000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.217" endtime="20230516 16:51:39.217"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${EmployeesOldestOneExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.218" endtime="20230516 16:51:39.218"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][1]</arg>
<arg>${EmployeesOldestOneExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.218" endtime="20230516 16:51:39.218"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][2]</arg>
<arg>${EmployeesOldestOneExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.219" endtime="20230516 16:51:39.219"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][3]</arg>
<arg>${EmployeesOldestOneExpectedValue}[3]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230516 16:51:39.220" level="INFO">Argument types are:
&lt;class 'datetime.date'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.220" endtime="20230516 16:51:39.220"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][4]</arg>
<arg>${EmployeesOldestOneExpectedValue}[4]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.220" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.220" endtime="20230516 16:51:39.220"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.213" endtime="20230516 16:51:39.221"/>
</test>
<test id="s1-t3" name="Check most popular location">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${LocationMostPopularScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.222" level="INFO">Executing : Query  |  SELECT TOP(1) country_id as Country, COUNT(*) as TotalCount FROM hr.locations GROUP BY country_id ORDER BY TotalCount DESC </msg>
<msg timestamp="20230516 16:51:39.224" level="INFO">${output} = [('US', 3)]</msg>
<status status="PASS" starttime="20230516 16:51:39.222" endtime="20230516 16:51:39.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.224" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.224" endtime="20230516 16:51:39.224"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.224" level="INFO">[('US', 3)]</msg>
<status status="PASS" starttime="20230516 16:51:39.224" endtime="20230516 16:51:39.224"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${LocationMostPopularExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.225" endtime="20230516 16:51:39.225"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][1]</arg>
<arg>${LocationMostPopularExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.225" endtime="20230516 16:51:39.225"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.221" endtime="20230516 16:51:39.225"/>
</test>
<test id="s1-t4" name="Check locations with null postal code">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${LocationWithNullsScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.227" level="INFO">Executing : Query  |  SELECT city as City, country_id as Country FROM hr.locations WHERE postal_code IS NULL </msg>
<msg timestamp="20230516 16:51:39.229" level="INFO">${output} = [('London', 'UK')]</msg>
<status status="PASS" starttime="20230516 16:51:39.227" endtime="20230516 16:51:39.229"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.229" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.229" endtime="20230516 16:51:39.229"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.229" level="INFO">[('London', 'UK')]</msg>
<status status="PASS" starttime="20230516 16:51:39.229" endtime="20230516 16:51:39.229"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${LocationWithNullsExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.230" endtime="20230516 16:51:39.230"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][1]</arg>
<arg>${LocationWithNullsExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.230" endtime="20230516 16:51:39.230"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.227" endtime="20230516 16:51:39.231"/>
</test>
<test id="s1-t5" name="Check cities from most popular location">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${LocationTopCountryScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.232" level="INFO">Executing : Query  |  SELECT city as City FROM hr.locations WHERE country_id = (SELECT MAX(country_id) FROM hr.locations) </msg>
<msg timestamp="20230516 16:51:39.233" level="INFO">${output} = [('Southlake',), ('South San Francisco',), ('Seattle',)]</msg>
<status status="PASS" starttime="20230516 16:51:39.231" endtime="20230516 16:51:39.233"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.233" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.233" endtime="20230516 16:51:39.233"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.233" level="INFO">[('Southlake',), ('South San Francisco',), ('Seattle',)]</msg>
<status status="PASS" starttime="20230516 16:51:39.233" endtime="20230516 16:51:39.233"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${LocationTopCountryExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.233" endtime="20230516 16:51:39.233"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[1][0]</arg>
<arg>${LocationTopCountryExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.234" endtime="20230516 16:51:39.234"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[2][0]</arg>
<arg>${LocationTopCountryExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.234" endtime="20230516 16:51:39.234"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.231" endtime="20230516 16:51:39.234"/>
</test>
<test id="s1-t6" name="Check max average and min salary">
<kw name="Query" library="DatabaseLibrary">
<var>${output1}</var>
<arg>${JobsMaxScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.235" level="INFO">Executing : Query  |  SELECT TOP (1) 'Max' as Metric, job_title as Title, max_salary as Salary FROM hr.jobs WHERE max_salary = (SELECT MAX(max_salary) FROM hr.jobs) </msg>
<msg timestamp="20230516 16:51:39.237" level="INFO">${output1} = [('Max', 'President', Decimal('40000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.235" endtime="20230516 16:51:39.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.237" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.237" endtime="20230516 16:51:39.237"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output1}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.237" level="INFO">[('Max', 'President', Decimal('40000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.237" endtime="20230516 16:51:39.237"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output1}[0][0]</arg>
<arg>${JobsMaxExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.237" endtime="20230516 16:51:39.238"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output1}[0][1]</arg>
<arg>${JobsMaxExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.238" endtime="20230516 16:51:39.238"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output1}[0][2]</arg>
<arg>${JobsMaxExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.238" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.238" endtime="20230516 16:51:39.238"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${output2}</var>
<arg>${JobsAverageScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.239" level="INFO">Executing : Query  |  SELECT 'Average' as Metric, NULL, AVG(Salary) as Salary FROM hr.employees </msg>
<msg timestamp="20230516 16:51:39.240" level="INFO">${output2} = [('Average', None, Decimal('8060.000000'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.239" endtime="20230516 16:51:39.240"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.240" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.240" endtime="20230516 16:51:39.240"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output2}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.240" level="INFO">[('Average', None, Decimal('8060.000000'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.240" endtime="20230516 16:51:39.240"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output2}[0][0]</arg>
<arg>${JobsAverageExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.241" endtime="20230516 16:51:39.241"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output2}[0][1]</arg>
<arg>${JobsAverageExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230516 16:51:39.241" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.241" endtime="20230516 16:51:39.241"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output2}[0][2]</arg>
<arg>${JobsAverageExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.241" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.241" endtime="20230516 16:51:39.241"/>
</kw>
<kw name="Query" library="DatabaseLibrary">
<var>${output3}</var>
<arg>${JobsMinScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.242" level="INFO">Executing : Query  |  SELECT TOP (1) 'Min' as Metric, job_title as Title, min_salary as Salary FROM hr.jobs WHERE min_salary = (SELECT MIN(min_salary) FROM hr.jobs) </msg>
<msg timestamp="20230516 16:51:39.244" level="INFO">${output3} = [('Min', 'Stock Clerk', Decimal('2000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.242" endtime="20230516 16:51:39.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.245" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.244" endtime="20230516 16:51:39.245"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output3}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.245" level="INFO">[('Min', 'Stock Clerk', Decimal('2000.00'))]</msg>
<status status="PASS" starttime="20230516 16:51:39.245" endtime="20230516 16:51:39.245"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output3}[0][0]</arg>
<arg>${JobsMinExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.246" endtime="20230516 16:51:39.246"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output3}[0][1]</arg>
<arg>${JobsMinExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.246" endtime="20230516 16:51:39.246"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output3}[0][2]</arg>
<arg>${JobsMinExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.247" level="INFO">Argument types are:
&lt;class 'decimal.Decimal'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.247" endtime="20230516 16:51:39.247"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.235" endtime="20230516 16:51:39.247"/>
</test>
<test id="s1-t7" name="Check most popular position in company">
<kw name="Query" library="DatabaseLibrary">
<var>${output}</var>
<arg>${JobsMostPopularPositionScript}</arg>
<doc>Uses the input `selectStatement` to query for the values that will be returned as a list of tuples. Set optional
input `sansTran` to True to run command without an explicit transaction commit or rollback.
Set optional input `returnAsDict` to True to return values as a list of dictionaries.</doc>
<msg timestamp="20230516 16:51:39.249" level="INFO">Executing : Query  |  SELECT TOP(1) Jobs.job_id AS ID, Jobs.job_title AS Title, COUNT(*) AS PositionTotalCount FROM hr.jobs as Jobs JOIN hr.employees as Employees ON Jobs.job_id = Employees.job_id GROUP BY Jobs.job_id, Jobs.job_title ORDER BY PositionTotalCount DESC </msg>
<msg timestamp="20230516 16:51:39.251" level="INFO">${output} = [(6, 'Accountant', 5)]</msg>
<status status="PASS" starttime="20230516 16:51:39.249" endtime="20230516 16:51:39.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Query result:</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230516 16:51:39.252" level="INFO">Query result:</msg>
<status status="PASS" starttime="20230516 16:51:39.252" endtime="20230516 16:51:39.252"/>
</kw>
<kw name="Log Many" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given messages as separate entries using the INFO level.</doc>
<msg timestamp="20230516 16:51:39.252" level="INFO">[(6, 'Accountant', 5)]</msg>
<status status="PASS" starttime="20230516 16:51:39.252" endtime="20230516 16:51:39.252"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][0]</arg>
<arg>${JobsMostPopularPositionExpectedValue}[0]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.254" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.254" endtime="20230516 16:51:39.254"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}[0][1]</arg>
<arg>${JobsMostPopularPositionExpectedValue}[1]</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20230516 16:51:39.254" endtime="20230516 16:51:39.254"/>
</kw>
<kw name="Should Be Equal As Numbers" library="BuiltIn">
<arg>${output}[0][2]</arg>
<arg>${JobsMostPopularPositionExpectedValue}[2]</arg>
<doc>Fails if objects are unequal after converting them to real numbers.</doc>
<msg timestamp="20230516 16:51:39.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20230516 16:51:39.255" endtime="20230516 16:51:39.255"/>
</kw>
<status status="PASS" starttime="20230516 16:51:39.248" endtime="20230516 16:51:39.255"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20230516 16:51:39.256" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20230516 16:51:39.256" endtime="20230516 16:51:39.257"/>
</kw>
<doc>Test cases for TRN Database</doc>
<status status="PASS" starttime="20230516 16:51:39.129" endtime="20230516 16:51:39.257"/>
</suite>
<statistics>
<total>
<stat pass="7" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" skip="0" id="s1" name="DatabaseTest">DatabaseTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
